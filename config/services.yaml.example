# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  default_admin_email: info@t3dev.ru
  default_subject: Subject from site orcieresconciergerie.me
  default_domain: 'orcieresconciergerie.me'
  default_scheme: 'https'
  app.supported_locales: 'en|fr|ru'

  router.request_context.host: '%env(default:default_domain:SYMFONY_DEFAULT_ROUTE_HOST)%'
  router.request_context.scheme: '%env(default:default_scheme:SYMFONY_DEFAULT_ROUTE_SCHEME)%'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      $photoDir: "%kernel.project_dir%/public_html/uploads/documents"
      $targetDirectory: "%kernel.project_dir%/public_html/uploads/files"
      $adminEmail: "%env(string:default:default_admin_email:ADMIN_EMAIL)%"
      $defaultSubject: "%env(string:default:default_subject:DEFAULT_SUBJECT)%"
      $dateFormat: "Y-m-d"
      $timeFormat: "H:i"

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller/'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Twig\AppExtension:
    lazy:  true